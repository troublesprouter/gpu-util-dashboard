apiVersion: apps/v1
kind: Deployment
metadata:
  name: fake-gpu-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fake-gpu-metrics
  template:
    metadata:
      labels:
        app: fake-gpu-metrics
    spec:
      containers:
        - name: metrics
          image: python:3.11-alpine
          command: ["python", "-u", "-c"]
          args:
            - |
              import random, time, http.server, socketserver, os
              PORT=int(os.environ.get('PORT', '9401'))
              class H(http.server.BaseHTTPRequestHandler):
                  def do_GET(self):
                      if self.path!="/metrics":
                          self.send_response(404); self.end_headers(); return
                      g0=random.randint(0,100)
                      g1=random.randint(0,100)
                      fb0=random.randint(0,12000)
                      fb1=random.randint(0,12000)
                      data=f"""# HELP DCGM_FI_DEV_GPU_UTIL Fake GPU utilisation\n# TYPE DCGM_FI_DEV_GPU_UTIL gauge\nDCGM_FI_DEV_GPU_UTIL{{ "{{" }}gpu=\"0\",device=\"nvidia0\"{{ "}}" }} {g0}\nDCGM_FI_DEV_GPU_UTIL{{ "{{" }}gpu=\"1\",device=\"nvidia1\"{{ "}}" }} {g1}\n# HELP DCGM_FI_DEV_FB_USED Fake FB used\n# TYPE DCGM_FI_DEV_FB_USED gauge\nDCGM_FI_DEV_FB_USED{{ "{{" }}gpu=\"0\",device=\"nvidia0\"{{ "}}" }} {fb0}\nDCGM_FI_DEV_FB_USED{{ "{{" }}gpu=\"1\",device=\"nvidia1\"{{ "}}" }} {fb1}\n"""
                      self.send_response(200)
                      self.send_header('Content-Type','text/plain; version=0.0.4')
                      self.end_headers(); self.wfile.write(data.encode())
              with socketserver.TCPServer(("", PORT), H) as httpd:
                  httpd.serve_forever()
          ports:
            - containerPort: 9401
          env:
            - name: PORT
              value: "9401"
---
apiVersion: v1
kind: Service
metadata:
  name: fake-gpu-metrics
  labels:
    app: fake-gpu-metrics
spec:
  selector:
    app: fake-gpu-metrics
  ports:
    - port: 9401
      targetPort: 9401
      name: metrics 